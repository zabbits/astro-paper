---
import { getCollection } from "astro:content";

interface Props {
  activeCategory?: string;
  activeSlug?: string;
}

const { activeCategory, activeSlug } = Astro.props;

const notes = await getCollection("note", ({ data }) => !data.draft);

// Group notes by category
const notesByCategory = notes.reduce((acc, note) => {
  const category = note.slug.split('/')[0];
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(note);
  return acc;
}, {} as Record<string, typeof notes>);

// Sort categories and their notes
const categories = Object.keys(notesByCategory).sort();
for (const category of categories) {
  notesByCategory[category].sort((a, b) => {
    // Sort by title if no pubDatetime
    if (!a.data.pubDatetime || !b.data.pubDatetime) {
      return a.data.title.localeCompare(b.data.title);
    }
    return new Date(b.data.pubDatetime).getTime() - new Date(a.data.pubDatetime).getTime();
  });
}
---

<aside class="sticky top-20 h-[calc(100vh-5rem)] overflow-y-auto min-w-[240px] max-w-[300px] pb-6">
  <h2 class="text-lg font-semibold mb-4">Categories</h2>
  <ul class="space-y-3">
    {
      categories.map(category => (
        <li>
          <details open={activeCategory === category}>
            <summary class={`cursor-pointer hover:text-skin-accent ${
              activeCategory === category ? "text-skin-accent font-medium" : ""
            }`}>
              <span class="capitalize">{category.replace(/-/g, " ")}</span>
              <span class="text-sm text-gray-500 ml-1">({notesByCategory[category].length})</span>
            </summary>
            <ul class="mt-2 space-y-2 ml-4">
              {notesByCategory[category].map(note => (
                <li>
                  <a
                    href={`/notes/${note.slug}`}
                    class={`block text-sm hover:text-skin-accent ${
                      activeSlug === note.slug ? "text-skin-accent font-medium" : ""
                    }`}
                  >
                    {note.data.title}
                  </a>
                </li>
              ))}
            </ul>
          </details>
        </li>
      ))
    }
  </ul>
</aside>

<style>
  details summary::-webkit-details-marker {
    display: none;
  }
  
  details > summary {
    list-style: none;
    position: relative;
    padding-left: 1.25rem;
  }
  
  details > summary::before {
    content: "â–º";
    position: absolute;
    left: 0;
    transform: rotate(0);
    transform-origin: center;
    transition: transform 0.2s;
    font-size: 0.8em;
  }
  
  details[open] > summary::before {
    transform: rotate(90deg);
  }
</style>
